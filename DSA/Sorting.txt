# Sorting 
# Bubble Sort 
def bubble_sort(lst):
    for pas in range(1, len(lst)):
        swaps = 0
        for i in range(len(lst)-pas):
            if lst[i] > lst[i+1]:
                k = lst[i+1]
                lst[i+1] = lst[i]
                lst[i] = k
                swaps += 1
               
        if swaps == 0:
            break
    return lst   

print(bubble_sort([64, 34, 25, 12, 22, 11, 90]))  
print(bubble_sort([1,3,6,8,9]))  


# Selection Sort
def selection_sort(lst):
    for i in range(len(lst)-1):
        min_index = i
        for j in range(i+1 , len(lst)):
            if lst[j] < lst[min_index]:
                min_index = j
                
        lst[i] , lst[min_index] = lst[min_index] , lst[i]
                
    return lst  
print(selection_sort([64, 74, 250, 12, 22, 11, 90])) 

# Insertion sort
def insertion_sort(arr):
    n = len(arr)

    for current in range(1,n):
        currentCard = arr[current]
        correctPosition = current-1
         
        while correctPosition >= 0:
            if arr[correctPosition] < currentCard:
                break

            else:
                arr[correctPosition+1] = arr[correctPosition]
                correctPosition -= 1
                arr[correctPosition + 1] = currentCard
    return arr
       
print(insertion_sort([12, 11, 13, 5, 6]))

   # OR

def insertion_sort_inplace(lst):
    for i in range(1, len(lst)):
        key = lst[i]
        j = i - 1
        while j >= 0 and key < lst[j]:
            lst[j + 1] = lst[j]
            j -= 1
        lst[j + 1] = key
    return lst

print(insertion_sort([3,9,6,2,1]))



        
        
        