# Solution 1
class Node:
  def __init__(self,Value):
    self.data = Value
    self.next = None
class Stack:
    def __init__(self):
      self.top = None

    def isempty(self):
      return self.top == None
    
    def push(self,value):
      new_node = Node(value)
      new_node.next = self.top
      self.top = new_node
      
    def pop(self):
      if (self.isempty()):
        return "Stack Empty"
      else:
        data = self.top.data
        self.top = self.top.next
        return data 
      
s1= Stack()
s2= Stack()
res= ""
def queueusingstack(operation,item):
  if operation == "enqueue":
    res = s1.push(item)
    return res
  else:
    if s2.isempty():
      if s1.isempty():
        return "Empty Queue"
    else:
      data = s1.pop()
      s2.push(data)
      res = s2.pop()
      return res

print(queueusingstack("enqueue",5)) 
  